// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warehouse.ConfigDataBase;

#nullable disable

namespace WarehouseConfigService.Migrations
{
    [DbContext(typeof(WarehouseConfig))]
    [Migration("20230615162646_AddExpectedStatesToCameras")]
    partial class AddExpectedStatesToCameras
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_areas");

                    b.ToTable("areas", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.BarrierInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer")
                        .HasColumnName("area_id");

                    b.Property<string>("Login")
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uri");

                    b.HasKey("Id")
                        .HasName("pk_barrier_infos");

                    b.ToTable("barrier_infos", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer")
                        .HasColumnName("area_id");

                    b.Property<int>("Direction")
                        .HasColumnType("integer")
                        .HasColumnName("direction");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_cameras");

                    b.ToTable("cameras", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_configs");

                    b.ToTable("configs", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("integer")
                        .HasColumnName("area_id");

                    b.Property<string>("NaisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nais_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_storages");

                    b.ToTable("storages", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.TimeControledState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarStateId")
                        .HasColumnType("integer")
                        .HasColumnName("car_state_id");

                    b.Property<int>("Timeout")
                        .HasColumnType("integer")
                        .HasColumnName("timeout");

                    b.HasKey("Id")
                        .HasName("pk_time_controled_states");

                    b.ToTable("time_controled_states", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Login")
                        .HasDatabaseName("ix_users_login");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Main.CarStateType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int?>("CameraId")
                        .HasColumnType("integer")
                        .HasColumnName("camera_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_name");

                    b.HasKey("Id")
                        .HasName("pk_car_state_type");

                    b.HasIndex("CameraId")
                        .HasDatabaseName("ix_car_state_type_camera_id");

                    b.ToTable("car_state_type", (string)null);
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Main.CarStateType", b =>
                {
                    b.HasOne("Warehouse.DataBase.Models.Config.Camera", null)
                        .WithMany("ExpectedStates")
                        .HasForeignKey("CameraId")
                        .HasConstraintName("fk_car_state_type_cameras_camera_id");
                });

            modelBuilder.Entity("Warehouse.DataBase.Models.Config.Camera", b =>
                {
                    b.Navigation("ExpectedStates");
                });
#pragma warning restore 612, 618
        }
    }
}
